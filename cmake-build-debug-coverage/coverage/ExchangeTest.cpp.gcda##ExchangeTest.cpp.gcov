        -:    0:Source:/home/lisa/CLionProjects/Exchange/tests/ExchangeTest.cpp
        -:    0:Graph:/home/lisa/CLionProjects/Exchange/cmake-build-debug-coverage/tests/CMakeFiles/ExchangeTest.dir/ExchangeTest.cpp.gcno
        -:    0:Data:/home/lisa/CLionProjects/Exchange/cmake-build-debug-coverage/tests/CMakeFiles/ExchangeTest.dir/ExchangeTest.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by lisa on 29.04.23.
        -:    3://
        -:    4:
        -:    5:#include "ExchangeTest.hpp"
        -:    6:
        4:    7:TEST(ExchangeTest, ActionInit) {
        5:    8:    Action action = Action(ActionType::ADD, {"lis", "1200"});
        5:    9:    Action action2 = Action("ADD", {"lis", "1200"});
        1:   10:}
------------------
_ZN28ExchangeTest_ActionInit_TestC2Ev:
function _ZN28ExchangeTest_ActionInit_TestC2Ev called 1 returned 100% blocks executed 100%
        1:    7:TEST(ExchangeTest, ActionInit) {
        1:    7-block  0
call    0 returned 1
------------------
_ZN28ExchangeTest_ActionInit_TestD0Ev:
function _ZN28ExchangeTest_ActionInit_TestD0Ev called 1 returned 100% blocks executed 100%
        1:    7:TEST(ExchangeTest, ActionInit) {
        1:    7-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN28ExchangeTest_ActionInit_TestD2Ev:
function _ZN28ExchangeTest_ActionInit_TestD2Ev called 1 returned 100% blocks executed 100%
        1:    7:TEST(ExchangeTest, ActionInit) {
        1:    7-block  0
call    0 returned 1
------------------
_ZN28ExchangeTest_ActionInit_Test8TestBodyEv:
function _ZN28ExchangeTest_ActionInit_Test8TestBodyEv called 1 returned 100% blocks executed 45%
        1:    7:TEST(ExchangeTest, ActionInit) {
        5:    8:    Action action = Action(ActionType::ADD, {"lis", "1200"});
        1:    8-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:    8-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:    8-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:    8-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
        2:    8-block  4
call   16 returned 2
        1:    8-block  5
call   17 returned 1
call   18 returned 1
    $$$$$:    8-block  6
    $$$$$:    8-block  7
    $$$$$:    8-block  8
    $$$$$:    8-block  9
call   19 never executed
    $$$$$:    8-block 10
    $$$$$:    8-block 11
    $$$$$:    8-block 12
        5:    9:    Action action2 = Action("ADD", {"lis", "1200"});
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:    9-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:    9-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:    9-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:    9-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
        2:    9-block  4
call   22 returned 2
        1:    9-block  5
call   23 returned 1
call   24 returned 1
    $$$$$:    9-block  6
    $$$$$:    9-block  7
    $$$$$:    9-block  8
    $$$$$:    9-block  9
    $$$$$:    9-block 10
    $$$$$:    9-block 11
call   25 never executed
    $$$$$:    9-block 12
    $$$$$:    9-block 13
    $$$$$:    9-block 14
        1:   10:}
call    0 returned 1
call    1 returned 1
    $$$$$:   10-block  0
call    2 never executed
------------------
        -:   11:
        4:   12:TEST(ExchangeTest, TraderInit) {
        2:   13:    Trader trader1 = Trader("lis", 1200);
        -:   14:
        1:   15:}
------------------
_ZN28ExchangeTest_TraderInit_TestC2Ev:
function _ZN28ExchangeTest_TraderInit_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   12:TEST(ExchangeTest, TraderInit) {
        1:   12-block  0
call    0 returned 1
------------------
_ZN28ExchangeTest_TraderInit_TestD0Ev:
function _ZN28ExchangeTest_TraderInit_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   12:TEST(ExchangeTest, TraderInit) {
        1:   12-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN28ExchangeTest_TraderInit_TestD2Ev:
function _ZN28ExchangeTest_TraderInit_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   12:TEST(ExchangeTest, TraderInit) {
        1:   12-block  0
call    0 returned 1
------------------
_ZN28ExchangeTest_TraderInit_Test8TestBodyEv:
function _ZN28ExchangeTest_TraderInit_Test8TestBodyEv called 1 returned 100% blocks executed 57%
        1:   12:TEST(ExchangeTest, TraderInit) {
        2:   13:    Trader trader1 = Trader("lis", 1200);
        1:   13-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   13-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:   13-block  2
    $$$$$:   13-block  3
        -:   14:
        1:   15:}
call    0 returned 1
------------------
        -:   16:
        4:   17:TEST(ExchangeTest, ExchangeInitWithTrader) {
        1:   18:    StockExchange exchange_example = StockExchange();
        1:   19:    std::string name = "BiRgA";
        1:   20:    std::string name_expected = "BIRGA";
        1:   21:    StockExchange exchange = StockExchange(name);
       2*:   22:    ASSERT_EQ(name_expected, exchange.GetName());
        2:   23:    Trader trader = Trader("lis", 1200);
        1:   24:    exchange.AddTrader(trader);
        1:   25:    exchange.AddTrader(trader); //double add
        1:   26:    exchange.ToString();
        1:   27:    exchange.DeleteTrader(1L);
        1:   28:    exchange.DeleteTrader(1L); //double delete
        1:   29:    exchange.AddTrader(trader);
       1*:   30:    EXPECT_FALSE(exchange.CheckTrader(2) == "Trader with id 2 isn't registered");
       1*:   31:    EXPECT_TRUE(exchange.CheckTrader(4) == "Trader with id 4 isn't registered");
        1:   32:    int index = exchange.GetTraderIndex(2);
       1*:   33:    EXPECT_TRUE(exchange.GetTraderByIndex(index).GetName() == trader.GetName());
        1:   34:    exchange.DeleteTrader(index);
        1:   35:    exchange.DeleteTrader(index);
       1*:   36:    ASSERT_EQ(exchange.GetTraderIndex(124), -1);
        1:   37:}
------------------
_ZN40ExchangeTest_ExchangeInitWithTrader_TestC2Ev:
function _ZN40ExchangeTest_ExchangeInitWithTrader_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   17:TEST(ExchangeTest, ExchangeInitWithTrader) {
        1:   17-block  0
call    0 returned 1
------------------
_ZN40ExchangeTest_ExchangeInitWithTrader_TestD0Ev:
function _ZN40ExchangeTest_ExchangeInitWithTrader_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   17:TEST(ExchangeTest, ExchangeInitWithTrader) {
        1:   17-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN40ExchangeTest_ExchangeInitWithTrader_TestD2Ev:
function _ZN40ExchangeTest_ExchangeInitWithTrader_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   17:TEST(ExchangeTest, ExchangeInitWithTrader) {
        1:   17-block  0
call    0 returned 1
------------------
_ZN40ExchangeTest_ExchangeInitWithTrader_Test8TestBodyEv:
function _ZN40ExchangeTest_ExchangeInitWithTrader_Test8TestBodyEv called 1 returned 100% blocks executed 39%
        1:   17:TEST(ExchangeTest, ExchangeInitWithTrader) {
        1:   18:    StockExchange exchange_example = StockExchange();
        1:   18-block  0
call    0 returned 1
        1:   19:    std::string name = "BiRgA";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   19-block  0
        1:   20:    std::string name_expected = "BIRGA";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   20-block  0
        1:   21:    StockExchange exchange = StockExchange(name);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   21-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
    $$$$$:   21-block  1
       2*:   22:    ASSERT_EQ(name_expected, exchange.GetName());
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   22-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   22-block  1
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   22-block  2
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   22-block  3
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   22-block  4
call   19 never executed
call   20 never executed
        1:   22-block  5
        1:   22-block  6
call   21 returned 1
branch 22 taken 1 (fallthrough)
branch 23 taken 0
    $$$$$:   22-block  7
    $$$$$:   22-block  8
call   24 never executed
    $$$$$:   22-block  9
    $$$$$:   22-block 10
call   25 never executed
    $$$$$:   22-block 11
    $$$$$:   22-block 12
call   26 never executed
        2:   23:    Trader trader = Trader("lis", 1200);
        1:   23-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   23-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:   23-block  2
    $$$$$:   23-block  3
    $$$$$:   23-block  4
call    8 never executed
        1:   24:    exchange.AddTrader(trader);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   24-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   24-block  1
call    6 returned 1
    $$$$$:   24-block  2
call    7 never executed
    $$$$$:   24-block  3
        1:   25:    exchange.AddTrader(trader); //double add
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   25-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   25-block  1
call    6 returned 1
    $$$$$:   25-block  2
call    7 never executed
    $$$$$:   25-block  3
        1:   26:    exchange.ToString();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   26-block  0
call    3 returned 1
        1:   27:    exchange.DeleteTrader(1L);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   27-block  0
call    3 returned 1
        1:   28:    exchange.DeleteTrader(1L); //double delete
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   28-block  0
call    3 returned 1
        1:   29:    exchange.AddTrader(trader);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   29-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   29-block  1
call    6 returned 1
    $$$$$:   29-block  2
call    7 never executed
    $$$$$:   29-block  3
       1*:   30:    EXPECT_FALSE(exchange.CheckTrader(2) == "Trader with id 2 isn't registered");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   30-block  0
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   30-block  1
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   30-block  2
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   30-block  3
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   30-block  4
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:   30-block  5
call   22 never executed
call   23 never executed
call   24 never executed
        1:   30-block  6
call   25 returned 1
    $$$$$:   30-block  7
call   26 never executed
    $$$$$:   30-block  8
    $$$$$:   30-block  9
call   27 never executed
    $$$$$:   30-block 10
    $$$$$:   30-block 11
call   28 never executed
    $$$$$:   30-block 12
    $$$$$:   30-block 13
call   29 never executed
       1*:   31:    EXPECT_TRUE(exchange.CheckTrader(4) == "Trader with id 4 isn't registered");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   31-block  0
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   31-block  1
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   31-block  2
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   31-block  3
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   31-block  4
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:   31-block  5
call   22 never executed
call   23 never executed
call   24 never executed
        1:   31-block  6
call   25 returned 1
    $$$$$:   31-block  7
call   26 never executed
    $$$$$:   31-block  8
    $$$$$:   31-block  9
call   27 never executed
    $$$$$:   31-block 10
    $$$$$:   31-block 11
call   28 never executed
    $$$$$:   31-block 12
    $$$$$:   31-block 13
call   29 never executed
        1:   32:    int index = exchange.GetTraderIndex(2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   33:    EXPECT_TRUE(exchange.GetTraderByIndex(index).GetName() == trader.GetName());
        1:   33-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   33-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   33-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   33-block  3
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
call   13 returned 1
call   14 returned 1
branch 15 taken 0 (fallthrough)
branch 16 taken 1
    %%%%%:   33-block  4
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:   33-block  5
call   20 never executed
branch 21 never executed
branch 22 never executed
    %%%%%:   33-block  6
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    %%%%%:   33-block  7
call   27 never executed
branch 28 never executed
branch 29 never executed
    %%%%%:   33-block  8
call   30 never executed
call   31 never executed
call   32 never executed
        1:   33-block  9
call   33 returned 1
    $$$$$:   33-block 10
    $$$$$:   33-block 11
    $$$$$:   33-block 12
call   34 never executed
    $$$$$:   33-block 13
    $$$$$:   33-block 14
call   35 never executed
    $$$$$:   33-block 15
    $$$$$:   33-block 16
call   36 never executed
    $$$$$:   33-block 17
    $$$$$:   33-block 18
call   37 never executed
        1:   34:    exchange.DeleteTrader(index);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   34-block  0
call    3 returned 1
        1:   35:    exchange.DeleteTrader(index);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   35-block  0
call    3 returned 1
       1*:   36:    ASSERT_EQ(exchange.GetTraderIndex(124), -1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   36-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   36-block  1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   36-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   36-block  3
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   36-block  4
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   36-block  5
call   19 never executed
call   20 never executed
        1:   36-block  6
        1:   36-block  7
call   21 returned 1
branch 22 taken 1 (fallthrough)
branch 23 taken 0
    $$$$$:   36-block  8
    $$$$$:   36-block  9
    $$$$$:   36-block 10
call   24 never executed
    $$$$$:   36-block 11
    $$$$$:   36-block 12
call   25 never executed
    $$$$$:   36-block 13
    $$$$$:   36-block 14
call   26 never executed
        1:   37:}
        1:   37-block  0
        1:   37-block  1
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   37-block  2
        1:   37-block  3
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0
        1:   37-block  4
        1:   37-block  5
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:   37-block  6
        1:   37-block  7
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0
    $$$$$:   37-block  8
call   12 never executed
    $$$$$:   37-block  9
call   13 never executed
    $$$$$:   37-block 10
call   14 never executed
    $$$$$:   37-block 11
call   15 never executed
------------------
        -:   38:
        4:   39:TEST(ExchangeTest, ExchangeInitWithCompany) {
        1:   40:    StockExchange exchange = StockExchange();
        2:   41:    Company company = Company("Yandex", "ya", "IT", 120, 120, 120, 120, 20000);
        1:   42:    std::vector<Company> companies = exchange.GetCompanies();
        1:   43:    exchange.AddCompany(company);
        1:   44:    exchange.ToString();
       2*:   45:    ASSERT_EQ(company.GetName(), exchange.GetCompanyByIndex(exchange.GetCompanyIndex("ya")).GetName());
        2:   46:    std::vector<Company> categories = exchange.GetCompaniesByCategory("FINANCE");
       1*:   47:    EXPECT_TRUE(categories.empty());
        1:   48:    exchange.DeleteCompany("ya");
        1:   49:    exchange.DeleteCompany("lo");
        1:   50:}
------------------
_ZN41ExchangeTest_ExchangeInitWithCompany_TestC2Ev:
function _ZN41ExchangeTest_ExchangeInitWithCompany_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   39:TEST(ExchangeTest, ExchangeInitWithCompany) {
        1:   39-block  0
call    0 returned 1
------------------
_ZN41ExchangeTest_ExchangeInitWithCompany_TestD0Ev:
function _ZN41ExchangeTest_ExchangeInitWithCompany_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   39:TEST(ExchangeTest, ExchangeInitWithCompany) {
        1:   39-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN41ExchangeTest_ExchangeInitWithCompany_TestD2Ev:
function _ZN41ExchangeTest_ExchangeInitWithCompany_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   39:TEST(ExchangeTest, ExchangeInitWithCompany) {
        1:   39-block  0
call    0 returned 1
------------------
_ZN41ExchangeTest_ExchangeInitWithCompany_Test8TestBodyEv:
function _ZN41ExchangeTest_ExchangeInitWithCompany_Test8TestBodyEv called 1 returned 100% blocks executed 42%
        1:   39:TEST(ExchangeTest, ExchangeInitWithCompany) {
        1:   40:    StockExchange exchange = StockExchange();
        1:   40-block  0
call    0 returned 1
        2:   41:    Company company = Company("Yandex", "ya", "IT", 120, 120, 120, 120, 20000);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   41-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   41-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   41-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:   41-block  3
    $$$$$:   41-block  4
    $$$$$:   41-block  5
    $$$$$:   41-block  6
    $$$$$:   41-block  7
    $$$$$:   41-block  8
        1:   42:    std::vector<Company> companies = exchange.GetCompanies();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   43:    exchange.AddCompany(company);
        1:   43-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   43-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   43-block  2
call    6 returned 1
    $$$$$:   43-block  3
call    7 never executed
    $$$$$:   43-block  4
        1:   44:    exchange.ToString();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   44-block  0
call    3 returned 1
       2*:   45:    ASSERT_EQ(company.GetName(), exchange.GetCompanyByIndex(exchange.GetCompanyIndex("ya")).GetName());
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   45-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   45-block  1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   45-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   45-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   45-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
branch 24 taken 0 (fallthrough)
branch 25 taken 1
    %%%%%:   45-block  5
call   26 never executed
branch 27 never executed
branch 28 never executed
    %%%%%:   45-block  6
call   29 never executed
call   30 never executed
branch 31 never executed
branch 32 never executed
    %%%%%:   45-block  7
call   33 never executed
branch 34 never executed
branch 35 never executed
    %%%%%:   45-block  8
call   36 never executed
call   37 never executed
        1:   45-block  9
        1:   45-block 10
call   38 returned 1
branch 39 taken 1 (fallthrough)
branch 40 taken 0
    $$$$$:   45-block 11
    $$$$$:   45-block 12
    $$$$$:   45-block 13
    $$$$$:   45-block 14
    $$$$$:   45-block 15
    $$$$$:   45-block 16
call   41 never executed
    $$$$$:   45-block 17
    $$$$$:   45-block 18
call   42 never executed
    $$$$$:   45-block 19
    $$$$$:   45-block 20
call   43 never executed
        2:   46:    std::vector<Company> categories = exchange.GetCompaniesByCategory("FINANCE");
        1:   46-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   46-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:   46-block  2
    $$$$$:   46-block  3
    $$$$$:   46-block  4
call    8 never executed
       1*:   47:    EXPECT_TRUE(categories.empty());
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   47-block  0
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   47-block  1
call    8 never executed
branch  9 never executed
branch 10 never executed
    %%%%%:   47-block  2
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   47-block  3
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:   47-block  4
call   18 never executed
call   19 never executed
call   20 never executed
        1:   47-block  5
call   21 returned 1
    $$$$$:   47-block  6
call   22 never executed
    $$$$$:   47-block  7
    $$$$$:   47-block  8
call   23 never executed
    $$$$$:   47-block  9
    $$$$$:   47-block 10
call   24 never executed
    $$$$$:   47-block 11
    $$$$$:   47-block 12
call   25 never executed
        1:   48:    exchange.DeleteCompany("ya");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   48-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   48-block  1
call    7 returned 1
call    8 returned 1
call    9 returned 1
    $$$$$:   48-block  2
call   10 never executed
    $$$$$:   48-block  3
    $$$$$:   48-block  4
call   11 never executed
    $$$$$:   48-block  5
        1:   49:    exchange.DeleteCompany("lo");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   49-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   49-block  1
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
    $$$$$:   49-block  2
call   11 never executed
    $$$$$:   49-block  3
    $$$$$:   49-block  4
call   12 never executed
    $$$$$:   49-block  5
        1:   50:}
        1:   50-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   50-block  1
        1:   50-block  2
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0
        1:   50-block  3
        1:   50-block  4
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0
    $$$$$:   50-block  5
call    9 never executed
    $$$$$:   50-block  6
call   10 never executed
    $$$$$:   50-block  7
call   11 never executed
------------------
